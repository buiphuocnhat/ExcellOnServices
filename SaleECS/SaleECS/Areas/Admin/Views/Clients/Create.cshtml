@model SaleECS.Models.Client


@{
    //ViewBag.Title = "Create";
    //Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    Layout = null;
}
@section header{
    Create
}
@using (Html.BeginForm("Create", "Clients", FormMethod.Post))
{
    <div class="form-horizontal" id="form">

        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", "error")

        <div class="form-group">
            @Html.LabelFor(model => model.FullName, "Full Name", htmlAttributes: new { @class = "control-label "})
            @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label " })
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label " })
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control"} })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label " })
            <div class="checkbox">
                @Html.RadioButtonFor(m => m.Gender, true)
                @Html.Label("Male")
                @Html.RadioButtonFor(m => m.Gender, false)
                @Html.Label("Female") <br />
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>

        </div>

        @*@Html.HiddenFor(model => model.CreateDate)*@

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label " })
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>

        @Html.HiddenFor(model => model.Status)

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyId, "Company Name", htmlAttributes: new { @class = "control-label " })
            @Html.DropDownList("CompanyId",ViewBag.ListOfCompany as SelectList,"All", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="Submit" value="Submit" class="btn btn-outline-success" />
                <input type="reset" value="Reset" class="btn btn-outline-warning" />
            </div>
        </div>                                     

    </div>
}
<script>
    $.validator.unobtrusive.parse("#form");
</script>

